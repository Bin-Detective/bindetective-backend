name: 'Release and Deploy to Cloud Run'

on:
  release:
    types:
      - created  # Trigger when a new release is created

env:
  PROJECT_ID: 'dicoding-submission-440805'
  REGION: 'asia-southeast2'
  SERVICE: 'bin-detective'
  DOCKER_IMAGE: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/bin-detective/bin-detective'

jobs:
  release_and_deploy:
    runs-on: 'ubuntu-latest'

    steps:
      # Step 1: Checkout the code to get access to the version control
      - name: Checkout the repository
        uses: actions/checkout@v2

      # Step 2: Get the latest tag and calculate the new patch version
      - name: Get latest tag and increment patch version
        id: version
        run: |
          # Get the latest version tag
          VERSION=$(git describe --tags --abbrev=0)
          echo "Latest version is $VERSION"

          # Extract the version numbers
          VERSION_NUM=$(echo $VERSION | sed 's/v//')
          MAJOR=$(echo $VERSION_NUM | cut -d. -f1)
          MINOR=$(echo $VERSION_NUM | cut -d. -f2)
          PATCH=$(echo $VERSION_NUM | cut -d. -f3)

          # Increment the patch version
          PATCH=$((PATCH+1))

          # New version
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "New version is $NEW_VERSION"

          # Set the new version tag for release
          echo "::set-output name=version::$NEW_VERSION"

      # Step 3: Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ## Docker Image
            The Docker image for this release is available on Google Artifact Registry:
            ```bash
            docker pull gcr.io/${{ env.PROJECT_ID }}/${{ env.REGION }}/bin-detective/bin-detective:${{ steps.version.outputs.version }}
            ```

      # Step 4: Trigger deployment via dispatching the "deploy" workflow
      - name: Trigger deployment workflow
        uses: peter-evans/workflow-dispatch@v1
        with:
          repository: ${{ github.repository }}
          workflow: google-cloudrun-docker.yml  # Reference the name of the deploy workflow file
          ref: ${{ github.ref }}
          inputs:
            version: ${{ steps.version.outputs.version }}
